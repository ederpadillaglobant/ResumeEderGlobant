ext {
    /**
     * Packages
     **/

    //LiveData
    lifeCycle = 'androidx.lifecycle'

    //Kotlin
    kotlinPackage = 'org.jetbrains.kotlin'

    //Android Support Versions
    supportPackage = 'androidx.appcompat'
    constraintLayoutPackage = 'androidx.constraintlayout'
    googleMaterialPackage = 'com.google.android.material'

    //Dagger
    daggerPackage = 'com.google.dagger'

    //Core
    corePackage = 'androidx.core'

    //Junit
    jUnitPackage = 'junit'

    //Runner
    runnerPackage = 'androidx.test'

    espressoPackage = 'androidx.test.espresso'

    //Retrofit
    retrofitPackage = 'com.squareup.retrofit2'

    //RX
    reactivePackage = 'io.reactivex.rxjava2'

    //Glide
    glidePackage = 'com.github.bumptech.glide'

    //OkHttp
    okktpLogginInterceptorPackage = 'com.squareup.okhttp3'

    //Lottie
    lottiePackage = 'com.airbnb.android'

    //Circle Image View
    circleImageViewPackage = 'com.mikhaellopez'

    /**
     *Versions
     **/

    //LiveData
    lifeCycleVersion = '2.0.0'

    //Kotlin
    kotlinVersion = '1.3.21'

    //Android Support Versions
    supportVersion = '1.1.0-alpha03'
    constraintLayoutVersion = '1.1.3'
    googleMaterialVersion = '1.0.0'

    // Rx
    rxAndroidVersion = '2.0.2'
    rxJavaVersion  = '2.1.12'

    //Dagger 2
    daggerVersion = '2.21'

    //Core
    coreVersion = '1.0.0'

    //Junit
    jUnitVersion = '4.12'

    //Runner
    runnerVersion = '1.1.2-alpha02'

    //Espresso
    espressoVersion = '3.1.1'

    //Retrofit
    retrofitVersion = '2.5.0'

    //Glide
    glideVersion = '4.7.1'

    //OkHttp
    okktpLogginInterceptorVersion = '3.9.1'

    //Lottie
    lottieVersion = '2.7.0'

    //Circle ImageView
    circleImageViewVersion = '3.2.0'


    architectureComponents = [
            lifecycle         :  buildDependency(lifeCycle, 'lifecycle-extensions', lifeCycleVersion),
            lifecycleCompiler :  buildDependency(lifeCycle, 'lifecycle-compiler', lifeCycleVersion)
    ]

    kotlinDependencies = [
            kotlin       : buildDependency(kotlinPackage, 'kotlin-stdlib-jdk7', kotlinVersion),
            core         : buildDependency(corePackage, 'core-ktx', coreVersion)
    ]

    test = [
            jUntit       : buildDependency(jUnitPackage, 'junit', jUnitVersion),
            runner       : buildDependency(runnerPackage, 'runner', runnerVersion),
            espresso     : buildDependency(espressoPackage, 'espresso-core', espressoVersion)
    ]

    supportDependencies = [
            appCompat        : buildDependency(supportPackage, 'appcompat', supportVersion),
            googleMaterial   : buildDependency(googleMaterialPackage,'material',googleMaterialVersion),
            constraint       : buildDependency(constraintLayoutPackage, 'constraintlayout',constraintLayoutVersion),
            dagger           : buildDependency(daggerPackage, 'dagger',daggerVersion),
            daggerAnnotation : buildDependency(daggerPackage, 'dagger-compiler',daggerVersion)
    ]

    rxDependencies = [
            rxAndroid: buildDependency(reactivePackage, 'rxandroid', rxAndroidVersion),
            rxJava   : buildDependency(reactivePackage,'rxjava',rxJavaVersion)
    ]

    retrofitDependencies = [
            retrofit     : buildDependency(retrofitPackage, 'retrofit', retrofitVersion),
            gson         : buildDependency(retrofitPackage, 'converter-gson', retrofitVersion),
            rxAdapterJava: buildDependency(retrofitPackage, 'adapter-rxjava2', retrofitVersion)
    ]

    okHttpDependencies = [
            okHttpLoggin  : buildDependency(okktpLogginInterceptorPackage,'logging-interceptor', okktpLogginInterceptorVersion)
    ]

    uiUtils = [
            glide : buildDependency(glidePackage, 'glide', glideVersion),
            glideAnnotationProcessor : buildDependency(glidePackage,'compiler',glideVersion),
            lottie    : buildDependency(lottiePackage, 'lottie', lottieVersion),
            circleImageView : buildDependency(circleImageViewPackage, 'circularimageview', circleImageViewVersion)
    ]

}

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}